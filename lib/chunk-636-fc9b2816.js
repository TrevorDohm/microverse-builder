"use strict";(globalThis.webpackChunk_croquet_microverse=globalThis.webpackChunk_croquet_microverse||[]).push([[636],{8636:(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});const i={modules:[{name:"PDFView",actorBehaviors:[class PDFActor{setup(){this.setupRun||(this.setupRun=!0,this.numPages=null,this.scrollPosition=null,this.PAGE_GAP_PERCENT=4,this.listen("docLoaded","docLoaded"),this.listen("changePage","changePage"),this.listen("scrollByPercent","scrollByPercent"),console.log(this))}viewJoined(e){}viewExited(e){}docLoaded(e){this.numPages=e.numPages,null===this.scrollPosition&&(this.scrollPosition={page:1,percent:0}),this.say("drawAtScrollPosition")}changePage(e){let{page:t,percent:s}=this.scrollPosition;(0<e||s<=0)&&(t+=e),0===t?t=this.numPages:t>this.numPages&&(t=1),s=0,this.scrollPosition={page:t,percent:s},this.say("drawAtScrollPosition")}scrollByPercent(e){var{page:t,percent:s}=this.scrollPosition;let{page:i,percent:r}=this.scrollPosition;var n=this.PAGE_GAP_PERCENT;r+=e,1===i&&r<0?r=0:i===this.numPages&&90<r?r=90:r<-n?(i--,r+=100+n):100<r&&(i++,r-=100+n),r=Math.round(r),i===t&&r===s||(this.scrollPosition={page:i,percent:r},this.say("drawAtScrollPosition"))}}],pawnBehaviors:[class PDFPawn{setup(){if(window.pdfjsPromise||(window.pdfjsPromise=new Promise(t=>{const e=document.createElement("script");e.setAttribute("src","https://mozilla.github.io/pdf.js/build/pdf.js"),e.onload=()=>{const e=window["pdfjs-dist/build/pdf"];e.GlobalWorkerOptions.workerSrc="//mozilla.github.io/pdf.js/build/pdf.worker.js",t(e)},document.body.appendChild(e)})),!this.setupRun){this.setupRun=!0,this.threeObj=this.shape.children.find(e=>"2d"===e.name),this.addEventListener("pointerDown","onPointerDown"),this.addEventListener("keyDown","onKeyDown"),this.addEventListener("pointerWheel","onPointerWheel"),this.renderedPage=null,this.listen("drawAtScrollPosition","drawAtScrollPosition");const t=this.canvas=document.createElement("canvas");t.id=this.actor._cardData.name||this.id,this.context=t.getContext("2d"),this.texture=this.threeObj.material[0].map=new THREE.CanvasTexture(this.canvas),console.log(this),this.pages=[],this.visiblePages={},this.renderQueue=[],this.renderingPage=null,this.loadDocument(this.actor._cardData.pdfLocation).then(()=>{this.ensurePageEntry(1)});var e=this._behavior.module.externalName;this.addUpdateRequest([e+"$PDFPawn","update"])}}async loadDocument(e){e=await this.getBuffer(e),e=URL.createObjectURL(new Blob([e]));try{const s=await window.pdfjsPromise;this.pdf=await s.getDocument(e).promise;var t=this.pdf.numPages;console.log(`PDF with ${t} pages loaded`),this.actor.numPages||this.say("docLoaded",{numPages:t})}catch(e){console.error(e.message)}URL.revokeObjectURL(e)}drawAtScrollPosition(){if(this.pdf&&this.PAGE_GAP){var{numPages:r,scrollPosition:n}=this.actor;if(r){const{canvas:d,context:l}=this;l.fillStyle="#888",l.fillRect(0,0,d.width,d.height),this.texture.needsUpdate=!0;var{page:r,percent:n}=n;let e=r,t=n/100,s=!1,i=0;for(;!s;){var{renderResult:a,renderWidth:o,renderHeight:h}=this.ensurePageEntry(e);if(void 0===h)return;a&&l.drawImage(a,0,t*h,o,h,0,i,o,h),i+=h-t*h+this.PAGE_GAP,e===this.actor.numPages||i>=this.canvas.height?s=!0:(e++,t=0)}}}}updateVisiblePages(){var i=this.actor["scrollPosition"];if(i&&this.PAGE_GAP){var{page:i,percent:r}=i,n=this.visiblePages;const o=this.visiblePages={};let e=i,t=r/100,s=0;for(;;){if(n[e]?o[e]=n[e]:o[e]=Date.now(),e===this.actor.numPages)return;var a=this.ensurePageEntry(e)["renderHeight"];if(void 0===a)return;if((s+=a-t*a+this.PAGE_GAP)>=this.canvas.height)return;e++,t=0}}}populateRenderQueue(){var e=this.actor["scrollPosition"];if(e&&this.PAGE_GAP){var t=e["page"];const i=this.renderQueue=[];var s=e=>{var t;e<1||e>this.actor.numPages||(t=this.ensurePageEntry(e)).page&&!t.renderTask&&i.push(e)};s(t);for(let e=1;e<4;e++)s(t+e),s(t-e)}}processRenderQueue(){if(!this.renderingPage||!Object.keys(this.visiblePages).includes(this.renderingPage)){var e,t,s,i,r=Date.now();for([e,t]of Object.entries(this.visiblePages))if(!(r-t<200)){var n=this.ensurePageEntry(e);if(n.page&&!n.renderTask)return void this.startRendering(e)}if(!this.renderingPage){const a=this.renderQueue;0!==a.length&&(s=a[0],(i=this.ensurePageEntry(s)).page&&(a.shift(),i.renderTask||this.startRendering(s)))}}}startRendering(e){if(this.renderingPage){const t=this.ensurePageEntry(this.renderingPage);t.renderTask.cancel()}this.renderingPage=e;const t=this.ensurePageEntry(e),{page:s,renderScale:i}=t;var r=s.getViewport({scale:i});const n=document.createElement("canvas");var a=n.getContext("2d"),a=(n.height=r.height,n.width=r.width,{canvasContext:a,viewport:r});const o=t.renderTask=s.render(a);o.promise.then(()=>{console.log(`p${e} rendered`),this.renderingPage=null,t.renderResult=n,this.finishedRendering(e)},()=>{console.log(`p${e} cancelled`),t.renderTask=null})}finishedRendering(e){Object.keys(this.visiblePages).includes(String(e))&&this.drawAtScrollPosition()}adjustCardSize(e,t){var{depth:s,cornerRadius:i}=this.actor._cardData,r=Math.max(e,t),n=1/r;const a=this.threeObj;a.geometry.dispose(),a.geometry=this.roundedCornerGeometry(e*n,t*n,s,i);n=4096/r*.999;this.canvas.width=n*e,this.canvas.height=n*t,a.material[0].map.dispose(),this.texture=a.material[0].map=new THREE.CanvasTexture(this.canvas),this.PAGE_GAP=t*this.actor.PAGE_GAP_PERCENT/100}ensurePageEntry(n){var e=this.pages[n];if(e)return e;const a={renderResult:null,renderTask:null};return this.pages[n]=a,this.pdf.getPage(n).then(e=>{var{width:t,height:s}=(a.page=e).getViewport({scale:1}),i=(a.width=t,a.height=s,4096/Math.max(t,s)*.999),{width:e,height:r}=e.getViewport({scale:i});a.renderScale=i,a.renderWidth=e,a.renderHeight=r,1===n&&this.adjustCardSize(t,s)}),a}onPointerDown(e){}onPointerWheel(t){if(this.pdf&&this.PAGE_GAP){let e=t.deltaY/this.canvas.height*100;50<Math.abs(e)&&(e=50*Math.sign(e)),this.say("scrollByPercent",e)}}onKeyDown(e){if(!e.repeat)switch(e.key){case"ArrowLeft":this.changePage(-1);break;case"ArrowRight":this.changePage(1)}}changePage(e){this.say("changePage",e)}onKeyUp(e){}update(){this.updateVisiblePages(),this.populateRenderQueue(),this.processRenderQueue()}destroy(){const e=this.threeObj;e.geometry.dispose(),e.material[0].map.dispose(),this.material.dispose()}}]}]}}}]);