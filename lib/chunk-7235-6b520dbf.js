"use strict";(globalThis.webpackChunk_croquet_microverse=globalThis.webpackChunk_croquet_microverse||[]).push([[7235],{7235:(t,s,i)=>{i.r(s),i.d(s,{default:()=>o});const o={modules:[{name:"Crane",actorBehaviors:[class CraneActor{setup(){this.pointA=[-1.4447057496318962,-5.504611090090481,29.225081241195],this.pointB=[-1.4447057496318962,-5.504611090090481,-6.840629102359376],this.subscribe("crane","updatePositionBy","updatePositionBy"),void 0===this.ratio&&(this.ratio=.2),this.updatePositionBy(0)}updatePositionBy(t){this.ratio+=t,this.ratio=Math.min(1,Math.max(0,this.ratio)),this.set({translation:Worldcore.v3_lerp(this.pointA,this.pointB,this.ratio)})}}]},{name:"CraneButton",actorBehaviors:[class CraneButtonActor{setup(){this.occupier=void 0,this.listen("publishMove","publishMove"),this.listen("pressButton","pressButton"),this.listen("publishFocus","publishFocus"),this.subscribe(this._cardData.myScope,"focus","focus")}publishMove(){void 0!==this.occupier&&this.future(100).publishMove(),this.publish("crane","updatePositionBy",this._cardData.craneSpeed)}pressButton(t){var{translation:t,color:s}=t;this.translateTo(t),this.say("updateColor",s)}publishFocus(t){this.publish(this._cardData.myScope,"focus",t)}focus(t){this.occupier=t}}],pawnBehaviors:[class CraneButtonPawn{setup(){var t,s;this.shape.children.forEach(t=>this.shape.remove(t)),this.shape.children=[],0===this.shape.children.length&&(t=new Worldcore.THREE.BoxGeometry(.2,.2,.2),s=new Worldcore.THREE.MeshStandardMaterial({color:this.actor._cardData.color||14181640}),this.obj=new Worldcore.THREE.Mesh(t,s),this.obj.castShadow=this.actor._cardData.shadow,this.obj.receiveShadow=this.actor._cardData.shadow,this.shape.add(this.obj)),this.addEventListener("pointerDown","start"),this.addEventListener("pointerUp","stop"),this.listen("updateColor","updateColor")}start(){void 0===this.actor.occupier&&(this.say("pressButton",{translation:[this.actor._translation[0],this.actor._translation[1],this.actor._translation[2]-.1],color:3224371}),this.say("publishFocus",this.viewId),this.say("publishMove"))}stop(){this.actor.occupier===this.viewId&&(this.say("pressButton",{translation:[this.actor._translation[0],this.actor._translation[1],this.actor._translation[2]+.1],color:14181640}),this.say("publishFocus",void 0))}updateColor(t){this.obj.material.color.set(t)}}]}]}}}]);